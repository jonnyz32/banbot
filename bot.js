const { Client, GatewayIntentBits } = require('discord.js');
const express = require('express');
const app = express();


// Create a new Discord client with the specified intents
const client = new Client({ intents:[
    GatewayIntentBits.GuildMembers,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.Guilds,
    GatewayIntentBits.DirectMessages,
    GatewayIntentBits.MessageContent

] });

// Define a list of user IDs to ban
const bannedWords = ["bettermint"]
const bannedUserIDs = ['730480523314724874','1110322965452689448','947963729113382933','984520203524272129','831038395294941185','774465756841902090','1139598449201909820', '1103008184920191036','1110577886592770068','756504275747864647','564673226278699028','995477553756258384','1064514329417887815','815071602785910794','783176171566399489','710455976943288412','759390626285355059','248895342630797313','1095366236306681919','662841213132603413','1087567107048341554','820971266918973480','710573556013989888','237982115587817473','786829953366753310','860155865951895572','87266333443497984','714992461444939797','914630246567923723','129052551147552768','709373917340500008','732603229300326431','908405076148776980','1000863587516022844','270694196128645122','241795871904104448','903600364417347584','1056157167679443014','307864904474427393','346046595252355072','975971292656324619','847809791475580928','754501467620245659','845596037049483264','798974558186766336','702248258948300833','801353076488929301','727765671903101011','756879398367526926','804092352280526868','707580195703619626','1032479383966978058','1099535006843535400','400282187708104704','442710003023872013','821806811496972399','348934147860856834','598390900758151181','1094187040188399667','590873513645047808','607437574646005781','875620201142562837','113463044922728448','827820322706292736','984937529922973748','925391501431832597','832235654292439050','491523779973873664','855817215039635506','300097989647794177','725065005397180487','595209495039311872','479729181610082314','804251345863311412','1053520255047180358','927773073271296021','817466473450045470','1054625581217611776','1056768260319748209','321515244243517441','605393960617246732','644018142007263232','851483402246946877','654742808065998869','883743189809377312','471164323813654546','313425274081378328','923389620044046396','1045429397836021852', '310419342401470464','687727823321825311', '853313819736014869', '304254935564812289','517370366667259934','1003958561300303882','802610807015735307','770994090875420674','439370931396280331','155763826049024000','1066668444877074542','704350072262885417','1033639158368981022','527210866744098816','716047102605525093','715122795511676999','758877540005314611','692803203791585350','280015609201164299','978576820301627452','995143460963221504','979932103355539506','826042013401088013','574228042352689164','297388458509598722','1000128545898631178','548445659741683723','1007005470105542769','921099325365428225','1075140077484773417','572081704500723733','784338597914214440','444800668373483520','692497757017079939','398083271616888833','1137651796152700958','100294948766646272','727078612699840589','823219067975368764','949778956545044500','955723275051364372','571495228024946689','713518780566732961','756189935496855603','239241973783986178','527082635936268289','197137107389644800','613816870205915140','792937567694749716','762029448458666004','406526178787328013','823254593051033640','385684465688510465','563363379570540556','757890642515984444','260087989827272706','906789969492840478','384741254254297089','1043036509319741490','539009825997062145','954843951297351771','1121172934598336572','776546910147969084','999736048596816014','270904126974590976','155149108183695360','790967448111153153','550613223733329920','557628352828014614','1057043734526701589','748539706513424485','845726259380092959','896939471155650631','853375620696506388','775611157398290454','1107569049795305492','955721520364290059','823686868931444756','255078632655945728','293198212108517377','603233567706841088','592801819806269480','319519300211965953','1021369097306505287','832951773403676702','857322433128562719','286388611694329857','1017227599367385128','1011292736500023347','1082783676762427562','1098369539990900757','1141163770794754058','1069727217636093982','829175208719810561','790321279957598260','516532116033503234','674662478172389397','792134699359010856','840316576942391356','925506627543650375','852157504908689418','402297499575910400','485461070509637649','356630263725293578','843764600709185589','802747967048122368','989238427662827561','226534189762215936','842039629615595581','716588414010523689','940293070212177980','728507002657046598','375944215429120000','662624066225700867','514606365642326026','1126114797579145277','608326797905494016','1032324057875624107','805955586885812294','406885681277960212','795138474578804736','556034668340707331','773057933839040562','1065192998251548743','595733747232407552','267059769024577536','694094742027239424','1080943463073329307','652773695173165098','160417492030717952','847446522630897724','996679848120561774','999315920352714853','533798724523261968','390921822100783105','526746439804649492','854997435146305536','538057905845305347','849943857319772162','966639202374668348','1022160261320286323']

client.on('ready', () => {
  console.log(`Logged in as ${client.user.tag}`);
});

const deleteMessages = (message, bannedUser) => {
    message.channel.messages.fetch({ limit: 100 })
    .then((messages) => {
      // Filter messages sent by the banned user
      const userMessages = messages.filter((msg) => msg.author.id === bannedUser.user.id);

      // Delete the user's messages
      userMessages.forEach((msg) => {
        msg.delete()
          .catch((error) => {
            console.error('Error deleting message:', error);
          });
      })
  })
    
}

client.on('guildMemberAdd', (member) => {
    console.log("joined user id is", member.user.id)
  if (bannedUserIDs.includes(member.user.id)) {
    // Ban the user if their ID is in the banned list
    member.ban()
      .then(() => {
        console.log(`User with ID ${member.user.id} has been banned.`);
      })
      .catch((error) => {
        console.error(error);
      });
  }
});

client.on('messageCreate', (message) => {
    // Check if the message contains the banned word (case-insensitive)
    const content = message.content.toLowerCase();
    console.log("content", content)

    for (const word of bannedWords){
        if(content.indexOf(word) !== -1){
            console.log("banning for ", word)
            message.member.ban()
            .then((bannedUser) => {
              console.log(`Banned user: ${bannedUser.user.tag}`);
              deleteMessages(message, bannedUser)
        })
            .catch((error) => {
              console.error('Error banning user:', error);
            });
        }
    }

    // Check if the message has file attachments
  if (message.attachments.size > 0) {
    // Iterate through the attachments
    for (const attachment of message.attachments.values()) {
      // Check if the attachment is a ZIP file based on its MIME type or file extension
      if (
        attachment.contentType === 'application/zip' ||
        attachment.name.endsWith('.zip') ||
        attachment.contentType === 'application/javascript' ||  // JavaScript file
        attachment.contentType === 'text/html' ||  // HTML file
        attachment.contentType === 'text/css' ||   // CSS file
        attachment.contentType === 'application/json' ||  // JSON file
        attachment.name.endsWith('.zip') ||          // ZIP file
        attachment.name.endsWith('.js') ||           // JavaScript file
        attachment.name.endsWith('.html') ||         // HTML file
        attachment.name.endsWith('.css') ||          // CSS file
        attachment.name.endsWith('.json')           
      ) {
        console.log("Banning attachment", attachment.name)
        // Ban the user who sent the message
        message.member.ban()
          .then((bannedUser) => {
            console.log(`Banned user: ${bannedUser.user.tag}`);
            deleteMessages(message, bannedUser)
          })
          .catch((error) => {
            console.error('Error banning user:', error);
          });
      }
    }
}

  });

const token = 'MTE0MjY1Nzc0MDEyOTQ1NjE4OQ.GU1GIs.RM-EgQLChDGHW6zqLkiDPYbKgPnnNRAmgghdSM';
client.login(token);
const PORT = process.env.PORT || 3300; // Use Heroku's assigned port or a default port

  app.listen(PORT, () => {
    console.log(`Listening on port ${PORT}`);
  });